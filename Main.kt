import kotlin.math.sqrt
import kotlin.math.pow

fun main() {
    // запрашиваем у пользователя количество точек (должно быть больше 2)
    println("Введите количество точек (больше 2):")
    val n = readLine()!!.toInt()

    // проверяем что количество точек больше двух иначе завершаем
    if (n <= 2) {
        println("Количество точек должно быть больше двух.")
        return
    }

    // создаём массив для хранения точек  размера n
    val points = Array(n) {
        // для каждой точки запрашиваем отдельно координату x
        println("Введите координату x точки №${it + 1}:")
        val x = readLine()!!.toDouble()
        //и отдельно координату y
        println("Введите координату y точки №${it + 1}:")
        val y = readLine()!!.toDouble()
        //создаём объект Point с введёнными координатами и помещаем в массив
        Point(x, y)
    }

    //переменная для хранения минимального расстояния, изначально очень большое число
    var minDistance = Double.MAX_VALUE
    // Переменная для хранения максимального расстояния, изначально 0
    var maxDistance = 0.0

    // Перебираем все пары точек для поиска расстояний между ними
    for (i in 0 until n) {
        for (j in i + 1 until n) {
            //вычисляем разницу по оси x
            val dx = points[i].x - points[j].x
            //вычисляем разницу по оси y
            val dy = points[i].y - points[j].y
            //находим расстояние между точками по формуле sqrt(dx^2 + dy^2)
            val dist = sqrt(dx.pow(2) + dy.pow(2))

            //обновляем минимальное расстояние если найдено меньшее
            if (dist < minDistance) minDistance = dist
            //обновляем максимальное расстояние если найдено большее
            if (dist > maxDistance) maxDistance = dist
        }
    }

    //выводим минимальное и максимальное расстояния между точками
    println("Минимальное расстояние между точками: $minDistance")
    println("Максимальное расстояние между точками: $maxDistance")
}
